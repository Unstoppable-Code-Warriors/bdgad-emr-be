name: CI/CD for NestJS Application

on:
  push:
    branches:
      - master

env:
  DOCKER_IMAGE: ${{ secrets.DOCKER_USERNAME }}/${{ vars.SERVICE_NAME }}
  SERVICE_NAME: ${{ vars.SERVICE_NAME }}
  SYSTEM_PROMPT: ${{ vars.SYSTEM_PROMPT }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          target: production
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-mcp:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Deploy ClickHouse MCP Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "Checking if uv is installed..."
            if ! command -v uv &> /dev/null; then
              echo "Installing uv..."
              curl -LsSf https://astral.sh/uv/install.sh | sh
              export PATH="$HOME/.local/bin:$PATH"
            else
              echo "uv is already installed"
            fi

            echo "Stopping existing ClickHouse MCP server..."
            pkill -f "mcp-clickhouse" || true

            echo "Starting ClickHouse MCP server..."
            if [ -f "${{ secrets.MCP_ENV_PATH }}" ]; then
              set -a
              source ${{ secrets.MCP_ENV_PATH }}
              set +a
            fi

            echo "Installing dependencies (this may take a while on first run)..."
            timeout 300 uv run --with mcp-clickhouse --python 3.10 --help > /dev/null 2>&1 || echo "Pre-installation completed or timed out"

            echo "Starting MCP server..."
            nohup uv run --with mcp-clickhouse --python 3.10 mcp-clickhouse > /tmp/mcp-clickhouse.log 2>&1 &

            echo "Waiting for MCP server to start (up to 30 seconds)..."
            for i in {1..30}; do
              if curl -s http://localhost:9999/health > /dev/null 2>&1; then
                echo "MCP server is ready!"
                break
              fi
              echo "Waiting... ($i/30)"
              sleep 1
            done

            echo "Checking ClickHouse MCP server health..."
            curl -f http://localhost:9999/health || echo "MCP server health check failed"

  deploy:
    runs-on: ubuntu-latest
    needs: [build, deploy-mcp]

    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "Pulling latest Docker image..."
            docker pull ${{ env.DOCKER_IMAGE }}:latest

            echo "Stopping existing container..."
            docker stop ${{ env.SERVICE_NAME }} 2>/dev/null || true
            docker rm ${{ env.SERVICE_NAME }} 2>/dev/null || true

            echo "Cleaning up unused Docker resources..."
            docker system prune -f

            echo "Starting new container..."
            docker run -d \
              --name ${{ env.SERVICE_NAME }} \
              --env-file ${{ secrets.ENV_PATH }} \
              -e SYSTEM_PROMPT="${{ env.SYSTEM_PROMPT }}" \
              --add-host=host.docker.internal:host-gateway \
              -p ${{ vars.SERVICE_PORT }}:${{ vars.SERVICE_PORT }} \
              --restart unless-stopped \
              ${{ env.DOCKER_IMAGE }}:latest

            echo "Deployment completed successfully!"
            docker ps | grep ${{ env.SERVICE_NAME }}
